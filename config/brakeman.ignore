{
  "ignored_warnings": [
    {
      "warning_type": "Remote Code Execution",
      "warning_code": 24,
      "fingerprint": "83db155235cf802b8d57568473fd206603029c7bfbf80263a137dae38eaa6730",
      "check_name": "UnsafeReflection",
      "message": "Unsafe reflection method constantize called with model attribute",
      "file": "app/controllers/private/withdraw_destinations_controller.rb",
      "line": 8,
      "link": "https://brakemanscanner.org/docs/warning_types/remote_code_execution/",
      "code": "\"withdraw_destination/#{Currency.find_by_code(params[:currency]).type}\".camelize.constantize",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Private::WithdrawDestinationsController",
        "method": "create"
      },
      "user_input": "Currency.find_by_code(params[:currency]).type",
      "confidence": "Medium",
      "note": "The currency type is validated properly"
    },
    {
      "warning_type": "Remote Code Execution",
      "warning_code": 24,
      "fingerprint": "c916e8ab2cdb5b612c018bfbf8f7587115a8087965f4bd01ad7954de195d6eb5",
      "check_name": "UnsafeReflection",
      "message": "Unsafe reflection method constantize called with model attribute",
      "file": "lib/coin_api.rb",
      "line": 17,
      "link": "https://brakemanscanner.org/docs/warning_types/remote_code_execution/",
      "code": "(if Currency.find_by!(:code => code.to_s).api_client.present? then\n  \"CoinAPI::#{Currency.find_by!(:code => code.to_s).api_client.camelize}\"\nelse\n  \"CoinAPI::#{code.upcase}\"\nend).constantize",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "CoinAPI",
        "method": "[]"
      },
      "user_input": "Currency.find_by!(:code => code.to_s).api_client",
      "confidence": "Medium",
      "note": "The currency type is validated properly"
    }
  ],
  "updated": "2018-03-30 10:53:40 +0300",
  "brakeman_version": "4.2.1"
}
